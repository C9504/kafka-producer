quarkus.http.port=8084

## ALLOW CORS
quarkus.http.cors=${ACTIVE_CORS:true}
quarkus.http.cors.origins=*
quarkus.http.cors.methods=${METHODS:GET, PUT, POST, DELETE}
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Type,Authorization
#quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=${ALLOW_CREDENTIALS:true}

quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://${DATABASE_HOSTNAME_PSQL:localhost:5432/event_driven}
quarkus.datasource.password=${DATABASE_PASSWORD:admin9504**}
quarkus.datasource.username=${DATABASE_USERNAME:negrdo}
quarkus.hibernate-orm.database.generation=${DATABASE_GENERATION:none}

kafka.bootstrap.servers=${KAFKA_BROKERS:172.21.0.3:9092}
#kafka.bootstrap.servers=10.0.100.127:9092
#quarkus.kafka.snappy.enabled=true

mp.messaging.incoming.projects-in.connector=smallrye-kafka
mp.messaging.incoming.projects-in.topic=${PROJECT_IN_TOPIC:projects}
mp.messaging.incoming.projects-in.partitions=3
mp.messaging.incoming.projects-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.projects-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.projects-in.auto.offset.reset=earliest
mp.messaging.incoming.projects-in.broadcast=true

mp.messaging.outgoing.projects-out.connector=smallrye-kafka
mp.messaging.outgoing.projects-out.topic=${PROJECT_OUT_TOPIC:projects}
mp.messaging.outgoing.projects-out.propagate-record-key=true
mp.messaging.outgoing.projects-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.projects-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.projects-out.acks=all
mp.messaging.outgoing.projects-out.key=true
#mp.messaging.outgoing.projects-out.compression.type=snappy
mp.messaging.outgoing.projects-out.merge=true

mp.messaging.incoming.test-start-in.connector=smallrye-kafka
mp.messaging.incoming.test-start-in.topic=${START_IN_TOPIC:test-start}
mp.messaging.incoming.test-start-in.partitions=3
mp.messaging.incoming.test-start-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.test-start-in.value.deserializer=org.c9504.deserializers.TestDeserializer
mp.messaging.incoming.test-start-in.auto.offset.reset=earliest
mp.messaging.incoming.test-start-in.broadcast=true

mp.messaging.outgoing.test-start-out.connector=smallrye-kafka
mp.messaging.outgoing.test-start-out.topic=${START_OUT_TOPIC:test-start}
mp.messaging.outgoing.test-start-out.propagate-record-key=true
mp.messaging.outgoing.test-start-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.test-start-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.test-start-out.acks=all
mp.messaging.outgoing.test-start-out.key=true
mp.messaging.outgoing.test-start-out.merge=true

mp.messaging.incoming.test-pending-in.connector=smallrye-kafka
mp.messaging.incoming.test-pending-in.topic=${PENDING_IN_TOPIC:test-pending}
mp.messaging.incoming.test-pending-in.partitions=3
mp.messaging.incoming.test-pending-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.test-pending-in.value.deserializer=org.c9504.deserializers.TestDeserializer
mp.messaging.incoming.test-pending-in.auto.offset.reset=earliest
mp.messaging.incoming.test-pending-in.broadcast=true

mp.messaging.outgoing.test-pending-out.connector=smallrye-kafka
mp.messaging.outgoing.test-pending-out.topic=${PENDING_OUT_TOPIC:test-pending}
mp.messaging.outgoing.test-pending-out.propagate-record-key=true
mp.messaging.outgoing.test-pending-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.test-pending-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.test-pending-out.acks=all
mp.messaging.outgoing.test-pending-out.key=true
mp.messaging.outgoing.test-pending-out.merge=true

mp.messaging.incoming.test-quality-in.connector=smallrye-kafka
mp.messaging.incoming.test-quality-in.topic=${QUALITY_IN_TOPIC:test-quality}
mp.messaging.incoming.test-quality-in.partitions=3
mp.messaging.incoming.test-quality-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.test-quality-in.value.deserializer=org.c9504.deserializers.TestDeserializer
mp.messaging.incoming.test-quality-in.auto.offset.reset=earliest
mp.messaging.incoming.test-quality-in.broadcast=true

mp.messaging.outgoing.test-quality-out.connector=smallrye-kafka
mp.messaging.outgoing.test-quality-out.topic=${QUALITY_OUT_TOPIC:test-quality}
mp.messaging.outgoing.test-quality-out.propagate-record-key=true
mp.messaging.outgoing.test-quality-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.test-quality-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.test-quality-out.acks=all
mp.messaging.outgoing.test-quality-out.key=true
mp.messaging.outgoing.test-quality-out.merge=true

mp.messaging.incoming.test-deploying-in.connector=smallrye-kafka
mp.messaging.incoming.test-deploying-in.topic=${DEPLOYING_IN_TOPIC:test-deploying}
mp.messaging.incoming.test-deploying-in.partitions=3
mp.messaging.incoming.test-deploying-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.test-deploying-in.value.deserializer=org.c9504.deserializers.TestDeserializer
mp.messaging.incoming.test-deploying-in.auto.offset.reset=earliest
mp.messaging.incoming.test-deploying-in.broadcast=true

mp.messaging.outgoing.test-deploying-out.connector=smallrye-kafka
mp.messaging.outgoing.test-deploying-out.topic=${DEPLOYING_OUT_TOPIC:test-deploying}
mp.messaging.outgoing.test-deploying-out.propagate-record-key=true
mp.messaging.outgoing.test-deploying-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.test-deploying-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.test-deploying-out.acks=all
mp.messaging.outgoing.test-deploying-out.key=true
mp.messaging.outgoing.test-deploying-out.merge=true
